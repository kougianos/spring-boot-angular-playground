{
  "HEADER": {
    "TITLE": "Spring Boot Angular Playground",
    "HOME": "Home",
    "MONGODB": "MongoDB CRUD",
    "PUBLIC_APIS": "Public APIs",
    "WEBSOCKET": "WebSocket Chat",
    "CACHE_ANALYTICS": "Cache Analytics",
    "LOGOUT": "Logout",
    "LANGUAGE": "Language"
  },
  "AUTH": {
    "LOGIN": {
      "TITLE": "Production-Ready Authentication",
      "SUBTITLE": "JWT-based secure authentication flow",
      "DESCRIPTION": "This application implements a production-grade authentication system with JWT tokens, featuring both Angular Guards and Spring Boot Security.",
      "USERNAME": "Username",
      "PASSWORD": "Password",
      "SIGN_IN": "Sign In",
      "REGISTER": "Register",
      "FORGOT_PASSWORD": "Forgot Password?",
      "NO_ACCOUNT": "Don't have an account?",
      "HAVE_ACCOUNT": "Already have an account?",
      "FLOW_DIAGRAM": {
        "USER_LOGIN": "User Login",
        "SPRING_SECURITY": "Spring Security",
        "JWT_TOKEN": "JWT Token",
        "ANGULAR_GUARDS": "Angular Guards"
      },
      "FEATURES": {
        "PASSWORD_SECURITY": "Password Security: Bcrypt hashing with salt for secure password storage",
        "SESSION_MANAGEMENT": "Session Management: Automatic token refresh and logout handling"
      },
      "TRY_LOGIN": "Try logging in to see the authentication flow in action. Invalid credentials will trigger proper error handling, while successful authentication will redirect you to the protected dashboard."
    },
    "REGISTER": {
      "TITLE": "Create Account",
      "EMAIL": "Email",
      "CONFIRM_PASSWORD": "Confirm Password",
      "CREATE_ACCOUNT": "Create Account"
    }
  },
  "HOME": {
    "WELCOME": "Welcome to Spring Boot Angular Playground!",
    "LOGGED_IN_AS": "You are logged in as:",
    "EMAIL": "Email:",
    "LOGOUT_BUTTON": "Logout"
  },
  "FEATURES": {
    "JWT_AUTH": "JWT Authentication: Stateless, secure token-based authentication",
    "ROUTE_GUARDS": "Angular Route Guards: Protect routes and redirect unauthorized users",
    "INTERCEPTORS": "HTTP Interceptors: Automatically attach JWT tokens to requests",
    "SPRING_SECURITY": "Spring Security: Server-side authentication and authorization"
  },
  "MONGODB": {
    "TITLE": "MongoDB CRUD Operations Demo",
    "NEW_DOCUMENT": "New Document",
    "REFRESH": "Refresh",
    "ABOUT_TITLE": "About This Page",
    "ABOUT_SUBTITLE": "Click to learn more",
    "ABOUT_DESCRIPTION": "This page demonstrates full CRUD operations (Create, Read, Update, Delete) on MongoDB documents through our full-stack architecture:",
    "FLOW_ANGULAR": "Angular Frontend",
    "FLOW_SPRING": "Spring Boot Backend",
    "FLOW_MONGODB": "MongoDB Database",
    "CRUD_DESCRIPTION": "You can create, view, edit, and delete documents with various data types including text, numbers, booleans, and timestamps. All operations are performed through REST API calls that persist data in MongoDB.",
    "CREATE_FEATURE": "Create: Add new documents with validation and form controls",
    "READ_FEATURE": "Read: Display documents in a sortable, interactive table",
    "UPDATE_FEATURE": "Update: Edit existing documents with pre-populated forms",
    "DELETE_FEATURE": "Delete: Remove documents with confirmation dialogs",
    "EDIT_DOCUMENT": "Edit Document",
    "CREATE_DOCUMENT": "Create Document",
    "TEXT_FIELD": "Text Field",
    "NUMBER_FIELD": "Number Field",
    "BOOLEAN_FIELD": "Boolean Field",
    "STATUS": "Status",
    "CREATED": "Created",
    "UPDATED": "Updated",
    "ACTIONS": "Actions",
    "ACTIVE": "Active",
    "INACTIVE": "Inactive",
    "EDIT": "Edit",
    "DELETE": "Delete",
    "SAVE": "Save",
    "CANCEL": "Cancel",
    "NO_DOCUMENTS": "No documents found in the database.",
    "TEXT_REQUIRED": "Text field is required",
    "NUMBER_REQUIRED": "Number field is required",
    "NUMBER_MIN": "Number must be positive",
    "ENTER_TEXT": "Enter text",
    "ENTER_NUMBER": "Enter number",
    "CREATE": "Create",
    "UPDATE": "Update",
    "ID": "ID",
    "CREATOR": "Creator",
    "TEXT": "Text",
    "NUMBER": "Number"
  },
  "PUBLIC_APIS": {
    "TITLE": "Public APIs Integration Demo",
    "ABOUT_TITLE": "About This Page",
    "ABOUT_SUBTITLE": "Click to learn more",
    "ABOUT_DESCRIPTION": "This page demonstrates the complete integration flow with 3 Public REST APIs through our full-stack architecture:",
    "FLOW_ANGULAR": "Angular Frontend",
    "FLOW_SPRING": "Spring Boot Backend",
    "FLOW_PUBLIC_APIS": "Public REST APIs",
    "INTEGRATION_DESCRIPTION": "The responses are fetched from external APIs, processed by our Spring Boot backend, and rendered back to the Angular UI with interactive features like collapsible sections and data clearing.",
    "DISNEY_FEATURE": "Disney API: Character information with films and TV shows",
    "DIGITALOCEAN_FEATURE": "DigitalOcean Status API: Real-time service status monitoring",
    "UK_GOV_FEATURE": "UK Government API: Official bank holidays data",
    "DISNEY_CHARACTERS": "Disney Characters",
    "DIGITALOCEAN_STATUS": "DigitalOcean Status",
    "UK_HOLIDAYS": "UK Bank Holidays",
    "CLEAR": "Clear",
    "FILMS": "Films",
    "TV_SHOWS": "TV Shows",
    "HOLIDAY": "Holiday",
    "DATE": "Date",
    "NOTES": "Notes"
  },
  "WEBSOCKET": {
    "TITLE": "Real-Time Chat",
    "ABOUT_TITLE": "About This Page",
    "ABOUT_SUBTITLE": "Click to learn more",
    "ABOUT_DESCRIPTION": "This page demonstrates Real-time WebSocket Communication using STOMP over SockJS through our full-stack architecture:",
    "FLOW_ANGULAR": "Angular Frontend",
    "FLOW_SPRING": "Spring Boot WebSocket",
    "FLOW_CHAT": "Real-time Chat",
    "CHAT_DESCRIPTION": "Chat with other connected users in real-time. The system tracks user connections and disconnections, displaying both active and recently disconnected users in the sidebar.",
    "MESSAGING_FEATURE": "Real-time Messaging: Send and receive messages instantly",
    "USER_TRACKING_FEATURE": "User Tracking: See who's online and recently disconnected",
    "SYSTEM_NOTIFICATIONS_FEATURE": "System Notifications: Join/leave announcements",
    "SEND_MESSAGE": "Send Message",
    "TYPE_MESSAGE": "Type your message...",
    "CONNECTED_USERS": "Connected Users",
    "CHAT_MESSAGES": "Chat Messages",
    "USERS": "Users",
    "CONNECTED": "Connected",
    "DISCONNECTED": "Disconnected",
    "ONLINE": "Online",
    "RECENTLY_OFFLINE": "Recently Offline",
    "NO_USERS_ONLINE": "No users online",
    "YOU": "You",
    "NO_MESSAGES": "No messages yet. Start the conversation!",
    "PRESS_ENTER": "Press Enter to send"
  },
  "CACHE_ANALYTICS": {
    "TITLE": "Cache Analytics Dashboard",
    "ABOUT_TITLE": "About This Page",
    "ABOUT_SUBTITLE": "Click to learn more",
    "ABOUT_DESCRIPTION": "This page demonstrates Redis Cache Analytics & Kafka Event Streaming with comprehensive monitoring through our full-stack architecture:",
    "FLOW_ANGULAR": "Angular Frontend",
    "FLOW_SPRING": "Spring Boot API",
    "FLOW_REDIS": "Redis Cache",
    "FLOW_KAFKA": "Kafka Analytics",
    "UNDER_HOOD": "Under the Hood: When you access cached data (MongoDB queries, external APIs), Spring Boot's CacheService checks Redis first. Cache hits/misses, response times, and rate limiting events are streamed to Kafka topics for real-time analytics processing.",
    "CACHE_PATTERN_FEATURE": "Cache-Aside Pattern: Intelligent caching reduces database load and improves response times"
  },
  "COMMON": {
    "LOGIN": "Login",
    "LOGOUT": "Logout",
    "REGISTER": "Register",
    "BACK_TO_LOGIN": "Back to Login",
    "USERNAME_EMAIL": "Username or Email",
    "USERNAME_EMAIL_REQUIRED": "Username or email is required",
    "PASSWORD_REQUIRED": "Password is required",
    "EMAIL_REQUIRED": "Email is required",
    "EMAIL_INVALID": "Please enter a valid email address",
    "USERNAME_REQUIRED": "Username is required",
    "USERNAME_MIN": "Username must be at least 3 characters",
    "USERNAME_MAX": "Username cannot exceed 50 characters",
    "PASSWORD_MIN": "Password must be at least 6 characters",
    "PASSWORD_MAX": "Password cannot exceed 100 characters",
    "LOADING": "Loading...",
    "STATUS": "Status",
    "LAST_UPDATED": "Last updated",
    "DESCRIPTION": "Description",
    "TIMEZONE": "Timezone",
    "URL": "URL"
  }
}
